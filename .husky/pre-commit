#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Run existing pre-commit tasks
npx lint-staged

# Security: Scan for secrets using gitleaks (if installed)
if command -v gitleaks &> /dev/null; then
  echo "üîç Scanning for secrets..."
  gitleaks detect --source . --verbose --no-banner
  
  if [ $? -ne 0 ]; then
    echo "‚ùå Secret detected! Commit blocked."
    echo "üìù Review the files and remove any hardcoded secrets."
    echo "üí° Use environment variables instead."
    exit 1
  fi
  echo "‚úÖ No secrets detected"
else
  echo "‚ö†Ô∏è  Gitleaks not installed. Install with: brew install gitleaks"
  echo "   Or visit: https://github.com/gitleaks/gitleaks#installation"
fi

# Security: Check for common security patterns
echo "üîç Checking for security anti-patterns..."

# Check for hardcoded JWT patterns (excluding documentation)
if git diff --cached --name-only | grep -v "\.md$" | xargs grep -E "eyJ[A-Za-z0-9+/]{20,}={0,2}" 2>/dev/null; then
  echo "‚ùå Potential hardcoded JWT/token detected!"
  echo "   Use environment variables for all tokens and keys."
  exit 1
fi

# Check for console.log with potential sensitive data
if git diff --cached --name-only --diff-filter=ACM | grep -E "\.(ts|tsx|js|jsx)$" | xargs grep -E "console\.(log|error|warn|info).*\b(password|token|secret|key|credential)" 2>/dev/null; then
  echo "‚ö†Ô∏è  Warning: console.log with potentially sensitive variable names detected"
  echo "   Make sure you're not logging sensitive information"
fi

echo "‚úÖ Security checks passed"
